# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

  pool:
    vmImage: 'vs2017-win2016'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 5.1.0'
  inputs:
    versionSpec: 5.1.0

- task: NuGetCommand@2
  displayName: 'Install docfx'
  inputs:
    command: custom
    arguments: 'install -ConfigFile .\NuGet.Config docfx.console -Version "2.43.2"'

- powershell: |
   Get-ChildItem Env:
   
   # Checkout master and pull updates
   echo "doing checkout"
   git checkout origin/master
   
   echo "doing pull"
   git pull
   
   # build docFX
   echo "doing build"
    .\docfx.console.2.43.2\tools\docfx.exe .\docfx.json --template .\_exported_templates/default
   
   # Use the environment variables input below to pass secret variables to this script.
   
  displayName: 'Compile DocFX'

- task: PowerShell@2
  displayName: 'Post process index for additional parsing character'
  inputs:
    targetType: filePath
    filePath: './$(Build.SourcesDirectory)/Scripts/PostProcessDocs.ps1'
    failOnStderr: true

- powershell: |
   # Write your powershell commands here.
   
   # cd $Build.Repository.LocalPath
   
   echo "moving _site to $(Build.ArtifactStagingDirectory)\"
   rm -Recurse -Force -ErrorAction:Ignore $(Build.ArtifactStagingDirectory)\_site
   mv .\_site $(Build.ArtifactStagingDirectory)\_site
   git clean -fd
   
   git checkout gh-pages
   git rm *
   cp -Force -Recurse $(Build.ArtifactStagingDirectory)\_site\* .
   
   git add .
   
   # Commit 
   git commit -m "Build Agent Modified DocFX Site"
   
   # Attempt push, exit if fail
   git push --verbose
   if ($LASTEXITCODE -ne 0) {
       throw "Git push failed"
   }
   
   # Use the environment variables input below to pass secret variables to this script.
   
  displayName: 'Push site to Github Pages'

